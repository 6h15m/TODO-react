{"version":3,"sources":["components/TodoTemplate.js","components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplate","children","className","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefalut","placeholder","type","TodoListItem","todo","onRemove","onToggle","id","text","checked","cn","onClick","React","memo","TodoList","todos","map","App","setTodos","nextId","useRef","current","concat","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92f18597.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TodoTemplate.scss';\r\n\r\nconst TodoTemplate = ({ children }) => {\r\n    return (\r\n        <div className=\"TodoTemplate\">\r\n            <div className=\"app-title\">토도 🐰</div>\r\n            <div className=\"content\">{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoTemplate;","import React, { useState, useCallback } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport './TodoInsert.scss';\r\n\r\nconst TodoInsert = ({ onInsert }) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    const onChange = useCallback(e => {\r\n        setValue(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(\r\n        e => {\r\n            onInsert(value);\r\n            setValue(''); // value 값 초기화\r\n\r\n            // submit 이벤트는 브라우저에서 새로고침을 발생시킵니다.\r\n            // 이를 방지하기 위해 이 함수를 호출합니다.\r\n            e.preventDefalut();\r\n        },\r\n        [onInsert, value],\r\n    );\r\n\r\n    return (\r\n        <form className=\"TodoInsert\" onSubmit={onSubmit}>\r\n            <input\r\n                placeholder=\"토끼가 오늘 할 일은?\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <button type=\"submit\">\r\n                <MdAdd />\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TodoInsert;","import React from 'react';\r\nimport {\r\n    MdCheckBoxOutlineBlank,\r\n    MdCheckBox,\r\n    MdRemoveCircleOutline,\r\n} from 'react-icons/md';\r\nimport cn from 'classnames';\r\nimport './TodoListItem.scss';\r\n\r\nconst TodoListItem = ({ todo, onRemove, onToggle }) => {\r\n    const { id, text, checked } = todo;\r\n\r\n    return (\r\n        <div className=\"TodoListItem\">\r\n            <div className={cn('checkbox', { checked })} onClick={() => onToggle(id)}>\r\n                {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n                <div className=\"text\">{text}</div>\r\n            </div>\r\n            <div className=\"remove\" onClick={() => onRemove(id)}>\r\n                <MdRemoveCircleOutline />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(TodoListItem);","import React from 'react';\r\nimport TodoListItem from './TodoListItem';\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = ({ todos, onRemove, onToggle }) => {\r\n    return (\r\n        <div className=\"TodoList\">\r\n            {todos.map(todo => (\r\n                <TodoListItem todo={todo} key={todo.id} onRemove={onRemove} onToggle={onToggle} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '끝내주게 풀 뜯기 🌿',\n      checked: true,\n    },\n    {\n      id: 2,\n      text: '간지철철 숨쉬기 💨',\n      checked: true,\n    },\n    {\n      id: 3,\n      text: '고양이 피해 숨기 😼',\n      checked: false,\n    },\n  ]);\n\n  // 고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    text => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos => todos.concat(todo));\n      nextId.current += 1; // nextId 1씩 더하기\n    },\n    [todos],\n  );\n\n  const onRemove = useCallback(\n    id => {\n      setTodos(todos => todos.filter(todo => todo.id !== id));\n    },\n    [todos],\n  );\n\n  const onToggle = useCallback(\n    id => {\n      setTodos(todos =>\n        todos.map(todo =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n        ),\n      );\n    },\n    [todos],\n  );\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}